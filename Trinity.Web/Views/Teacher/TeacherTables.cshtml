@model PagedList.IPagedList<Trinity.Entities.Teacher>
@using PagedList;
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" />

@{
    ViewBag.FirstName = "Teachers";
}




@*================================  Drop down items for pagination  ==============================================================================*@

<div>
    @{
        SelectListItem a1 = new SelectListItem() { Text = "2", Value = "2" };
        SelectListItem a2 = new SelectListItem() { Text = "3", Value = "3" };
        SelectListItem a3 = new SelectListItem() { Text = "10", Value = "10" };
        SelectListItem a4 = new SelectListItem() { Text = "15", Value = "15" };
        SelectListItem a5 = new SelectListItem() { Text = "30", Value = "30" };
        List<SelectListItem> dropDownItems = new List<SelectListItem>() { a1, a2, a3, a4, a5 };
    }

</div>



@*================================  Search form  ==============================================================================*@

<h2>Teachers</h2>

<hr />
<div class="searchBox" style="display:flex">
    @using (Html.BeginForm("TeacherTables", "Teacher", FormMethod.Get))
    {
        @Html.TextBox("searchFirstName", null, new { placeholder = "Search First Name" });
        @Html.TextBox("searchLastName", null, new { placeholder = "Search Last Name" });
        @Html.TextBox("searchTelephone", null, new { placeholder = "Search Telephone" });
        @Html.TextBox("searchEmail", null, new { placeholder = "Search Email" });
        <input type="number" name="searchSalary" value="" placeholder="Search salary" />

        string valueOfViewBag = ViewBag.CurrentSortOrder;

        @Html.TextBox("sortOrder", valueOfViewBag, new { type = "hidden" });
        @Html.DropDownList("pSize", dropDownItems)

        <input type="submit" name="SearchBtn" value="Search" />
    }
</div>




<hr />

@*=======================================  Sorting Action Links  ========================================================================*@
<div>
    <em> Sort By : </em>
    @Html.ActionLink("FirstName", "TeacherTables", "Teacher", new { sortOrder = ViewBag.FirstNameSortParam }, new { @class = ViewBag.FNPrimary })
    @Html.ActionLink("LastName", "TeacherTables", "Teacher", new { sortOrder = ViewBag.LastNameSortParam }, new { @class = ViewBag.LNPrimary })
    @Html.ActionLink("Telephone", "TeacherTables", "Teacher", new { sortOrder = ViewBag.TelephoneSortParam }, new { @class = ViewBag.TePrimary })
    @Html.ActionLink("Email", "TeacherTables", "Teacher", new { sortOrder = ViewBag.EmailSortParam }, new { @class = ViewBag.EmPrimary })
    @Html.ActionLink("Salary", "TeacherTables", "Teacher", new { sortOrder = ViewBag.SalarySortParam }, new { @class = ViewBag.SaPrimary })

</div>

<hr />

@*==================================  Teachers' properties' values TABLE ================================================*@
<div>
    <table class="table">
        <thead>
            <tr>
                <th>Video</th>
                <th>
                    @Html.ActionLink("First Name", "TeacherTables", "Teacher", new
                    {
                        sortOrder = ViewBag.FirstNameSortParam,
                        searchFirstName = ViewBag.CurrentFirstName,
                        searchLastName = ViewBag.CurrentLastName,
                        searchTelephone = ViewBag.CurrentTelephone,
                        searchEmail = ViewBag.CurrentEmail,
                        searchSalary = ViewBag.CurrentSalary,
                   pSize = ViewBag.CurrentpSize
                    }, new { @class = ViewBag.FNView })

                </th>
                <th>
                    @Html.ActionLink("Last Name", "TeacherTables", "Teacher", new
                    {
                        sortOrder = ViewBag.LastNameSortParam,
                        searchFirstName = ViewBag.CurrentFirstName,
                       searchLastName = ViewBag.CurrentLastName,
                       searchTelephone = ViewBag.CurrentTelephone,
                       searchEmail = ViewBag.CurrentEmail,
                       searchSalary = ViewBag.CurrentSalary,
                        pSize = ViewBag.CurrentpSize
                    }, new { @class = ViewBag.LNView })
                </th>

                <th>
                    @Html.ActionLink("Telephone", "TeacherTables", "Teacher", new
                    {
                        sortOrder = ViewBag.TelephoneSortParam,
                        searchFirstName = ViewBag.CurrentFirstName,
                       searchLastName = ViewBag.CurrentLastName,
                       searchTelephone = ViewBag.CurrentTelephone,
                       searchEmail = ViewBag.CurrentEmail,
                       searchSalary = ViewBag.CurrentSalary,
                        pSize = ViewBag.CurrentpSize
                    }, new { @class = ViewBag.TeView })
                </th>

                <th>
                    @Html.ActionLink("Email", "TeacherTables", "Teacher", new
                    {
                        sortOrder = ViewBag.EmailSortParam,
                        searchFirstName = ViewBag.CurrentFirstName,
                        searchLastName = ViewBag.CurrentLastName,
                        searchTelephone = ViewBag.CurrentTelephone,
                        searchEmail = ViewBag.CurrentEmail,
                        searchSalary = ViewBag.CurrentSalary,
                        pSize = ViewBag.CurrentpSize
                    }, new { @class = ViewBag.EmView })
                </th>


                <th>
                    @Html.ActionLink("Salary", "TeacherTables", "Teacher", new
                    {
                        sortOrder = ViewBag.SalarySortParam,
                        searchFirstName = ViewBag.CurrentFirstName,
                        searchLastName = ViewBag.CurrentLastName,
                        searchTelephone = ViewBag.CurrentTelephone,
                        searchSalary = ViewBag.CurrentSalary,
                        searchEmail = ViewBag.CurrentEmail,
                        pSize = ViewBag.CurrentpSize
                    }, new { @class = ViewBag.SaView })
                </th>



            </tr>
        </thead>

        <tbody>
            @foreach (var teacher in Model)
            {
                <tr>
                    <td><a href="/Teacher/SimpleDetails/@teacher.TeacherId"> <img width="100" height="100" class="img-fluid" src="@teacher.VideoURL" alt="Teacher video" /></a></td>
                    <td>  @Html.ActionLink((string.Format("{0}", teacher.FirstName)), "SimpleDetails", "Teacher", new { id = teacher.TeacherId }, null)</td>
                    <td>  @Html.DisplayFor(x => teacher.LastName)</td>
                    <td>@Html.DisplayFor(x => teacher.Telephone)</td>
                    <td> @Html.DisplayFor(x => teacher.Email)</td>
                    <td> @Html.DisplayFor(x => teacher.Salary)</td>

                    <td><button><a href="/Teacher/SimpleDetails/@teacher.TeacherId">Details</button></td>

                </tr>
            }

        </tbody>

    </table>


    @*================================  Pagination  ==============================================================================*@
    <div>
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount


        @Html.PagedListPager(Model, x => @Url.Action("TeacherTables", "Teacher",
        new
        {
            page = x,
            sortOrder = ViewBag.CurrentSortOrder,
            searchFirstName = ViewBag.CurrentFirstName,
            searchLastName = ViewBag.CurrentLastName,
            searchTelephone = ViewBag.CurrentTelephone,
            searchEmail = ViewBag.CurrentEmail,
            searchSalary = ViewBag.CurrentSalary,
            pSize = ViewBag.CurrentpSize
        }))
    </div>
    <hr />
